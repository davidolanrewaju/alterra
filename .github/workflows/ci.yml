name: Alterra CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up PHP
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, dom, fileinfo, pgsql
          coverage: xdebug

      # Copy .env.example to .env if it doesn't exist
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      # Install Composer dependencies
      - name: Install Composer Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      # Generate application key
      - name: Generate Application Key
        run: php artisan key:generate

      # Set directory permissions
      - name: Set Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      # Set up database credentials using GitHub Secrets
      - name: Set up database environment
        run: |
          echo "DB_CONNECTION=pgsql" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env

      # Run database migrations
      - name: Run Database Migrations
        run: php artisan migrate --force

      # Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Install NPM dependencies
      - name: Install NPM Dependencies
        run: npm ci

      # Build frontend assets
      - name: Build Frontend Assets
        run: npm run build

      # Run tests
      - name: Run Tests
        run: php artisan test
